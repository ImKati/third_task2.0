// ---------------------------------------------------- //
// -------------         STRINGS     ------------------ //
// ---------------------------------------------------- //

// ---------------------------------------------------- //
// 1. Returns the length of given string.
// ---------------------------------------------------- //
// EXAMPLE
// ---------------------------------------------------- //
//  'aaaaa' => 5
//  'b'     => 1
//  ''      => 0
// ---------------------------------------------------- //
// YOUR ANSWER
// ---------------------------------------------------- //
/*function getStringLength(value) {
  return value.length;
  }
  console.log(getStringLength('')); 
  */
// ---------------------------------------------------- //


// ---------------------------------------------------- //
// 2. Extracts a name from template string 'Hello, First_Name Last_Name!'.
// ---------------------------------------------------- //
// EXAMPLE
// ---------------------------------------------------- //
//   'Hello, John Doe!' => 'John Doe'
//   'Hello, Chuck Norris!' => 'Chuck Norris'
// ---------------------------------------------------- //
// YOUR ANSWER
// ---------------------------------------------------- //
/*function extractNameFromTemplate(value) {
  const array = value.split(',');
  return array[1].slice(1, array[1].length - 1);
  }
  console.log(extractNameFromTemplate('Hello, Chuck Norris!'));
  */
// ---------------------------------------------------- //


// ---------------------------------------------------- //
// 3. Remove the first occurrence of string inside another string
// ---------------------------------------------------- //
// EXAMPLE
// ---------------------------------------------------- //
//   'To be or not to be', 'not'  => 'To be or  to be'
//   'I like legends', 'end' => 'I like legs',
//   'ABABAB','BA' => 'ABAB'
// ---------------------------------------------------- //
// YOUR ANSWER
// ---------------------------------------------------- //
/*function removeFirstOccurrences(str, value) {
	var index = str.indexOf(value);
	if (index === -1) {
		return str;
	}
	return str.slice(0, index) + str.slice(index + value.length);
}

console.log(removeFirstOccurrences("ABABAB",'BA'));
*/
// ---------------------------------------------------- //


// ---------------------------------------------------- //
// 4. Converts all characters of the specified string into the upper case
// ---------------------------------------------------- //
// EXAMPLE
// ---------------------------------------------------- //
//   'Thunderstruck' => 'THUNDERSTRUCK'
//  'abcdefghijklmnopqrstuvwxyz' => 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
// ---------------------------------------------------- //
// YOUR ANSWER
// ---------------------------------------------------- //
/*function convertToUpperCase(str) {
  return str.toUpperCase();
  }
  console.log('abcdefghijklmnopqrstuvwxyz'.toUpperCase());
  */
// ---------------------------------------------------- //


// ---------------------------------------------------- //
// 5. Removes a leading and trailing whitespace characters from string.
// ---------------------------------------------------- //
// EXAMPLE
// ---------------------------------------------------- //
//   '  Abracadabra'    => 'Abracadabra'
//   'cat'              => 'cat'
//   '\tHello, World! ' => 'Hello, World!'
// ---------------------------------------------------- //
// YOUR ANSWER
// ---------------------------------------------------- //
/*function removeLeadingAndTrailingWhitespaces(value) {
  return value.trim();
  }
  console.log ('\tHello, World'.trim());
  */
  
// ---------------------------------------------------- //



// ---------------------------------------------------- //
// -------------         NUMBERS     ------------------ //
// ---------------------------------------------------- //



// ---------------------------------------------------- //
//  6. Returns an average of two given numbers.
// ---------------------------------------------------- // 
// EXAMPLE
// ---------------------------------------------------- //
//   5, 5  => 5
//  10, 0  => 5
//  -3, 3  => 0
// ---------------------------------------------------- //
// YOUR ANSWER
// ---------------------------------------------------- //
/*function average(value1, value2){
  return (value1 + value2)/2;
}
console.log(average(10, 0)); 
*/
// ---------------------------------------------------- //


// ---------------------------------------------------- //
// 7. Returns a last digit of a integer number.
// ---------------------------------------------------- //
// EXAMPLE
// ---------------------------------------------------- //
//  100     => 0
//   37     => 7
//   5     => 5
//   0     => 0
// ---------------------------------------------------- //
// YOUR ANSWER
// ---------------------------------------------------- //
/*function getLastDigit(value) {
  return Math.floor(value % 10);
  }
  console.log(getLastDigit('0'));
  */
// ---------------------------------------------------- //


// ---------------------------------------------------- //
// 8. Returns a diagonal length of the rectangular parallelepiped given by its sides a,b,c.
// ---------------------------------------------------- //
// EXAMPLE
// ---------------------------------------------------- //
//  1,1,1   => 1.7320508075688772
//  3,3,3   => 5.196152422706632
//  1,2,3   => 3.741657386773941
// ---------------------------------------------------- //
// YOUR ANSWER
// ---------------------------------------------------- //
/*function getParallelipidedDiagonal(a, b, c) {
  return Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2));
}
console.log (getParallelipidedDiagonal(1,2,3 ));
*/
// ---------------------------------------------------- //


// ---------------------------------------------------- //
// 9. Returns the number rounded to specified power of 10.
// ---------------------------------------------------- //
// EXAMPLE
// ---------------------------------------------------- //
//  1234, 0  => 1234
//   1234, 1  => 1230
//  1234, 2  => 1200
//  1234, 3  => 1000
//  1678, 0  => 1678
//  1678, 1  => 1680
//  1678, 2  => 1700
//  1678, 3  => 2000
// ---------------------------------------------------- //
// YOUR ANSWER
// ---------------------------------------------------- //
/*function roundToPowerOfTen(num, pow) {
  if (num % Math.pow(10, pow) >= 5 * Math.pow(10, pow - 1)) {
  return num + ( Math.pow(10, pow) - num % Math.pow(10, pow));
  }
  return num - (num % Math.pow(10, pow));
  }
  console.log(roundToPowerOfTen(1678, 3));
  */
// ---------------------------------------------------- //



// ---------------------------------------------------- //
// -------------         ARRAYS      ------------------ //
// ---------------------------------------------------- //



// ---------------------------------------------------- //
// 10. Generates an array of odd numbers of the specified length
// ---------------------------------------------------- //
// EXAMPLE
// ---------------------------------------------------- //
//  1 => [ 1 ]
//  2 => [ 1, 3 ]
//  5 => [ 1, 3, 5, 7, 9 ]
// ---------------------------------------------------- //
// YOUR ANSWER
// ---------------------------------------------------- //
/*function generateOdds(len) {
  let odd = 1; 
  let arr = [];
  for (let i = 1; i <= len; i++){
     arr.push(odd);
     odd += 2;
  }
  return arr;
}
console.log(generateOdds(5));
*/
// ---------------------------------------------------- //


// ---------------------------------------------------- //
// 11.  Returns the array with strings only in the specified array (in original order)
// ---------------------------------------------------- //
// EXAMPLE
// ---------------------------------------------------- //
//   [ 0, 1, 'cat', 3, true, 'dog' ] => [ 'cat', 'dog' ]
//  [ 1, 2, 3, 4, 5 ] => []
//   [ 'cat, 'dog', 'raccoon' ] => [ 'cat', 'dog', 'raccoon' ]
// ---------------------------------------------------- //
// YOUR ANSWER
// ---------------------------------------------------- //
/*function getArrayOfStrings(arr) {
  return arr.filter(elem => {
  return typeof elem == 'string';
  })
  }
  
  console.log(getArrayOfStrings([ 'cat', 'dog', 'raccoon' ]));
  */
// ---------------------------------------------------- //


// ---------------------------------------------------- //
// 12. Returns the array of string lengths from the specified string array.
// ---------------------------------------------------- //
// EXAMPLE
// ---------------------------------------------------- //
//   [ '', 'a', 'bc', 'def', 'ghij' ]  => [ 0, 1, 2, 3, 4 ]
//  [ 'angular', 'react', 'ember' ] => [ 7, 5, 5 ]
// ---------------------------------------------------- //
// YOUR ANSWER
// ---------------------------------------------------- //
/*function getStringsLength(arr) {
  let array = arr.map(elem => {
      return elem.length;
  });
  return array;
}
console.log(getStringsLength([ 'angular', 'react', 'ember' ]));
*/
// ---------------------------------------------------- //


// ---------------------------------------------------- //
// 13.  Returns the n first items of the specified array
// ---------------------------------------------------- //
// EXAMPLE
// ---------------------------------------------------- //
//    [ 1, 3, 4, 5 ], 2 => [ 1, 3 ]
//   [ 'a', 'b', 'c', 'd'], 3  => [ 'a', 'b', 'c' ]
// ---------------------------------------------------- //
// YOUR ANSWER
// ---------------------------------------------------- //
/*function getHead(arr, n) {
  return arr.slice(0, n);
}
console.log(getHead([ 'a', 'b', 'c', 'd'], 3));
*/
// ---------------------------------------------------- //


// ---------------------------------------------------- //
// 14.  Transforms the numeric array into the according array of squares:  f(x) = x * x
// ---------------------------------------------------- //
// EXAMPLE
// ---------------------------------------------------- //
//  [ 0, 1, 2, 3, 4, 5 ] => [ 0, 1, 4, 9, 16, 25 ]
//    [ 10, 100, -1 ]      => [ 100, 10000, 1 ]
// ---------------------------------------------------- //
// YOUR ANSWER
// ---------------------------------------------------- //
/*function toArrayOfSquares(arr) {
  return arr.map((item) => item ** 2);
}
const num = [10, 100, -1];
console.log(toArrayOfSquares(num));
*/
// ---------------------------------------------------- //


// ---------------------------------------------------- //
// 15.  Returns the 3 largest numbers from the specified array
// ---------------------------------------------------- //
// EXAMPLE
// ---------------------------------------------------- //
//  [] => []
//  [ 1, 2 ] => [ 2, 1 ]
//  [ 1, 2, 3 ] => [ 3, 2, 1 ]
//  [ 1,2,3,4,5,6,7,8,9,10 ] => [ 10, 9, 8 ]
//  [ 10, 10, 10, 10 ] => [ 10, 10, 10 ]
// ---------------------------------------------------- //
// YOUR ANSWER
// ---------------------------------------------------- //
/*function get3TopItems(arr) {
  return arr.reverse().filter((elem, index) => {
  if (index < 3)
  return elem;
  });
  }
  console.log(get3TopItems([  ]));
  */
// ---------------------------------------------------- //


// ---------------------------------------------------- //
// 16.  Concatenates all elements from specified array into single string with ',' delimeter
// ---------------------------------------------------- //
// EXAMPLE
// ---------------------------------------------------- //
// [0, false, 'cat', NaN, true, '']  => '0,false,cat,NaN,true,'
//   [1, 2, 3, 4, 5]                   => '1,2,3,4,5'
// ['rock', 'paper', 'scissors']     => 'rock,paper,scissors'
// ---------------------------------------------------- //
// YOUR ANSWER
// ---------------------------------------------------- //
/*function toStringList(arr) {
  return arr.join(',');
}
const elements = ['rock', 'paper', 'scissors'];

console.log (elements.join());
*/
// ---------------------------------------------------- //


// ---------------------------------------------------- //
// 17.  Returns array containing only unique values from the specified array.
// ---------------------------------------------------- //
// EXAMPLE
// ---------------------------------------------------- //
//  [ 1, 2, 3, 3, 2, 1 ] => [ 1, 2, 3 ]
//  [ 'a', 'a', 'a', 'a' ]  => [ 'a' ]
//  [ 1, 1, 2, 2, 3, 3, 4, 4] => [ 1, 2, 3, 4]
// ---------------------------------------------------- //
// YOUR ANSWER
// ---------------------------------------------------- //
/*function distinct(arr) {
  let array = [];
  arr.filter(elem => {
  if (array.indexOf(elem) == -1)
  array.push(elem);
  });
  return array;
  }
  console.log(distinct([ 1, 1, 2, 2, 3, 3, 4, 4]));
  */
// ---------------------------------------------------- //



// ---------------------------------------------------- //
// -------------       DATA TASKS    ------------------ //
// ---------------------------------------------------- //



// ---------------------------------------------------- //
// 18.  Parses an ISO 8601 string date representation into date value
//        For ISO 8601 date specification refer to : https://en.wikipedia.org/wiki/ISO_8601
// ---------------------------------------------------- //
// EXAMPLE
// ---------------------------------------------------- //
//  '2016-01-19T16:07:37+00:00'    => Date()
//  '2016-01-19T08:07:37Z' => Date()
// ---------------------------------------------------- //
// YOUR ANSWER
// ---------------------------------------------------- //
/*function parseDataFromIso8601(value) {
  return Date.parse(value);
}
console.log(parseDataFromIso8601('2016-01-19T16:07:37+00:00'));
*/
// ---------------------------------------------------- //



// ---------------------------------------------------- //
// -------------       OBJECTS       ------------------ //
// ---------------------------------------------------- //



// ---------------------------------------------------- //
// 19.  Returns the JSON representation of specified object
// ---------------------------------------------------- //
// EXAMPLE
// ---------------------------------------------------- //
// [1,2,3]   =>  '[1,2,3]'
//  { width: 10, height : 20 } => '{"height":10,"width":20}'
// ---------------------------------------------------- //
// YOUR ANSWER
// ---------------------------------------------------- //
/*function getJSON(obj) {
  return JSON.stringify([1,2,3]);
  }
  console.log (getJSON(JSON.stringify));
  */
// ---------------------------------------------------- //


// ---------------------------------------------------- //
// 20.  Returns the factorial of the specified integer n.
// ---------------------------------------------------- //
// EXAMPLE
// ---------------------------------------------------- //
//  1  => 1
// 5  => 120
//  10 => 3628800
// ---------------------------------------------------- //
// YOUR ANSWER
// ---------------------------------------------------- //
/*function getFactorial(n) {
  return(n<2)?1:getFactorial(n-1)*n;
};
console.log(getFactorial(5));
*/
// ---------------------------------------------------- //